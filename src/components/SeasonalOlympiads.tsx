'use client';

import { motion } from 'framer-motion';
import { useInView } from 'framer-motion';
import { useRef } from 'react';

const seasons = [
  {
    name: '–û—Å–µ–Ω–Ω—è—è –æ–ª–∏–º–ø–∏–∞–¥–∞',
    period: '–°–µ–Ω—Ç—è–±—Ä—å - –ù–æ—è–±—Ä—å',
    description: '–ù–∞—á–Ω–∏—Ç–µ —É—á–µ–±–Ω—ã–π –≥–æ–¥ —Å –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–≤–æ–∏—Ö –∑–Ω–∞–Ω–∏–π –∫–∏—Ç–∞–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞',
    icon: 'üçÅ',
  },
  {
    name: '–ó–∏–º–Ω—è—è –æ–ª–∏–º–ø–∏–∞–¥–∞',
    period: '–î–µ–∫–∞–±—Ä—å - –§–µ–≤—Ä–∞–ª—å',
    description: '–ó–∞–≤–µ—Ä—à–∏—Ç–µ –≥–æ–¥ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ–º –Ω–æ–≤—ã—Ö –≤—ã—Å–æ—Ç –≤ –∏–∑—É—á–µ–Ω–∏–∏ –∫–∏—Ç–∞–π—Å–∫–æ–≥–æ',
    icon: '‚ùÑÔ∏è',
  },
  {
    name: '–í–µ—Å–µ–Ω–Ω—è—è –æ–ª–∏–º–ø–∏–∞–¥–∞',
    period: '–ú–∞—Ä—Ç - –ú–∞–π',
    description: '–í—Å—Ç—Ä–µ—á–∞–π—Ç–µ –≤–µ—Å–Ω—É —Å –Ω–æ–≤—ã–º–∏ —É—Å–ø–µ—Ö–∞–º–∏ –≤ –∫–∏—Ç–∞–π—Å–∫–æ–º —è–∑—ã–∫–µ',
    icon: 'üå∏',
  },
];

export default function SeasonalOlympiads() {
  const ref = useRef(null);
  const isInView = useInView(ref, { once: true });

  return (
    <section
      className="py-16 bg-gradient-to-b from-gray-900 to-black"
      id="stages"
      ref={ref}
    >
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="text-center mb-12">
          <motion.h2
            initial={{ opacity: 0, y: 20 }}
            animate={isInView ? { opacity: 1, y: 0 } : {}}
            transition={{ duration: 0.5 }}
            className="text-3xl md:text-4xl font-bold text-white mb-4"
          >
            –°–µ–∑–æ–Ω–Ω—ã–µ –æ–ª–∏–º–ø–∏–∞–¥—ã
          </motion.h2>
          <motion.p
            initial={{ opacity: 0, y: 20 }}
            animate={isInView ? { opacity: 1, y: 0 } : {}}
            transition={{ duration: 0.5, delay: 0.2 }}
            className="text-xl text-gray-400"
          >
            –í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ –æ–ª–∏–º–ø–∏–∞–¥–µ
          </motion.p>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
          {seasons.map((season, index) => (
            <motion.div
              key={season.name}
              initial={{ opacity: 0, y: 20 }}
              animate={isInView ? { opacity: 1, y: 0 } : {}}
              transition={{ duration: 0.5, delay: index * 0.2 }}
              className="bg-gray-800/50 backdrop-blur-sm rounded-lg p-6 text-center group hover:bg-gray-800/70 transition-all duration-300"
            >
              <div className="text-4xl mb-4 transform group-hover:scale-110 transition-transform duration-300">
                {season.icon}
              </div>
              <h3 className="text-xl font-bold text-white mb-2">
                {season.name}
              </h3>
              <p className="text-red-500 font-semibold mb-4">{season.period}</p>
              <p className="text-gray-400">{season.description}</p>
            </motion.div>
          ))}
        </div>

        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={isInView ? { opacity: 1, y: 0 } : {}}
          transition={{ duration: 0.5, delay: 0.8 }}
          className="text-center mt-12"
        >
          <p className="text-gray-400">
            –¢–æ—á–Ω—ã–µ –¥–∞—Ç—ã –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ –æ–ª–∏–º–ø–∏–∞–¥—ã –¥–æ—Å—Ç—É–ø–Ω—ã –≤{' '}
            <a
              href="/dashboard"
              className="text-red-500 hover:text-red-400 transition-colors"
            >
              –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ
            </a>
          </p>
        </motion.div>
      </div>
    </section>
  );
}
